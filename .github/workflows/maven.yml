name: Quarkus CI/CD Pipeline

on:
  push:
    branches: ["master", "develop"]
  pull_request_target:
    branches: ["master", "develop"]
  schedule:
    - cron: "0 7 * * *" # Daily at 7:00 AM

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: staging
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: diag
          POSTGRES_USER: diag
          POSTGRES_DB: diag
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      fail-fast: false
      matrix:
        language: ["java"]

    steps:
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build and Test with Maven
        run: mvn verify

      - name: Test Reporter for Quarkus
        uses: dorny/test-reporter@v1.8.0
        with:
          name: test-results-tadiag
          path: target/surefire-reports/*.xml
          reporter: java-junit
          max-annotations: 10
          fail-on-error: true
          token: ${{ secrets.GITHUB_TOKEN }}

  deploy-to-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    environment: production
    
    env:
      PUBLIC_IP: ${{ secrets.PUBLIC_IP }}
      PI_USERNAME: ${{ secrets.PI_USERNAME }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set SSH key permissions
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: SSH to Raspberry Pi and Deploy Changes
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PUBLIC_IP }}
          username: ${{ secrets.PI_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            export JAVA_HOME=/usr/lib/jvm/temurin-21
            cd dev/projects/tadiag
            git reset --hard origin/master
            git pull origin master
            ./mvnw package
            docker build -f src/main/docker/Dockerfile.jvm -t quarkus/tadiag-jvm .
            docker run --name tadiag --env-file .env.prod -i --rm -p 8083:8080 quarkus/tadiag-jvm
