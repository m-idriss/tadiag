name: Quarkus CI with Docker

on:
  push:
    branches: ["master", "develop"]
  pull_request_target:
    branches: ["master", "develop"]
  schedule:
    - cron: "0 7 * * *"
    # Schedule: Run every day at 7:00 AM

jobs:
  build:
    runs-on: ubuntu-latest
    environment: staging
    env:
      WORDSAPI_KEY: ${{ secrets.WORDSAPI_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: diag
          POSTGRES_USER: diag
          POSTGRES_DB: diag
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      fail-fast: false
      matrix:
        language: ["java-kotlin"]
        
    steps:
      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Debug Environment Variables
        run: |
          echo "WORDSAPI_KEY: $WORDSAPI_KEY"
          echo "GITHUB_TOKEN: $GITHUB_TOKEN"
      
      - name: Build and Test with Maven with staging environment
        run: mvn verify --file pom.xml -Pstaging

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set SSH key permissions
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: SSH to Raspberry Pi and pull changes
        id: ssh_pull
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PUBLIC_IP }}
          username: ${{ secrets.PI_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd dev/projects/tadiag
            git reset --hard origin/master
            git pull origin master
        continue-on-error: true

      - name: Check if git pull was successful
        if: steps.ssh_pull.outcome == 'failure'
        run: exit 1 # Fail the workflow if git pull failed

      - name: SSH to Raspberry Pi and restart Docker Compose
        id: ssh_compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PUBLIC_IP }}
          username: ${{ secrets.PI_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd dev/projects/tadiag
             ./mvnw packag
            docker build -f src/main/docker/Dockerfile.jvm -t quarkus/tadiag-jvm .
            docker run --name tadiag --env-file .env.prod -i --rm -p 8083:8080 quarkus/tadiag-jvm
        continue-on-error: true

      - name: Check if Docker Compose restart was successful
        if: steps.ssh_compose.outcome == 'failure'
        run: exit 1 # Fail the workflow if Docker Compose restart failed
