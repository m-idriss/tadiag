name: Quarkus CI/CD for Raspberry Pi

on:
  push:
    branches:
      - "master"
      - "develop"
  pull_request:
    branches:
      - "master"
      - "develop"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: staging
    env:
      WORDSAPI_KEY: ${{ secrets.WORDSAPI_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: diag
          POSTGRES_USER: diag
          POSTGRES_DB: diag
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      fail-fast: false
      matrix:
        language: ["java-kotlin"]
        
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js for any frontend dependencies
      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # Step 3: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
      - name: cache ~/.m2
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      # Step 4: Build and run tests with Maven
      - name: Build and Test
        run: mvn clean verify

      # Step 5: Build and push the Docker image
      - name: Build and Push Docker Image using Jib
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn clean package -DskipTests -Dquarkus.container-image.push=true

      # Step 6: Manually re-tag and push the image
      - name: Re-tag and Push Image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          docker pull ghcr.io/${{ github.repository }}:latest
          docker tag ghcr.io/${{ github.repository }}:latest ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:latest

  deploy-to-pi:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Configure the SSH key for access
      - name: Set SSH Key Permissions
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Debug Environment Variables
        run: |
          echo "PUBLIC_IP: ${{ secrets.PUBLIC_IP }}"
          echo "PI_USERNAME: ${{ secrets.PI_USERNAME }}"

      # Step 3: Deploy to the Raspberry Pi
      - name: Deploy to Raspberry Pi
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PUBLIC_IP }}
          username: ${{ secrets.PI_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker login ghcr.io -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ghcr.io/${{ github.repository }}:latest
            docker stop quarkus-app || true
            docker rm quarkus-app || true
            docker run -d --name quarkus-app -p 8080:8080 ghcr.io/${{ github.repository }}:latest
